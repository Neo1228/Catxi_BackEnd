spring:
  datasource:
    url: jdbc:mysql://${HOST}:${PORT}/catxi?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Seoul&useLegacyDatetimeCode=false&connectionTimeZone=Asia/Seoul
    username: ${USER}
    password: ${PW}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          time_zone: Asia/Seoul

  liquibase:
    enabled: false

  jwt:
    header: authorization
    secret: dMghVCiJhzmN40SjVMxrWzw/HcDoRAxO7bl/S1Dok0nldXQ66qaPD/faWiQ7ln50D4NiLy+eu7grCHVit0J+Dg==
    access-token-validity-in-seconds: 3600
    refresh-token-validity-in-seconds: 604800

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: https://catxi-university-taxi-b0936.web.app/callback/kakao
            authorization-grant-type: authorization_code
            scope: profile_nickname,account_email
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  # Redis 설정 추가 (로컬용)
  data:
    redis:
      host: localhost
      port: 6379
      password:
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  jackson:
    time-zone: Asia/Seoul

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
    metrics:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: [0.5, 0.95, 0.99]
  prometheus:
    metrics:
      export:
        enabled: true

discord:
  webhook:
    url: ${DISCORD_WEBHOOK_URL:}

logging:
  level:
    com.project.catxi: INFO
    org.springframework.web.client: INFO
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ./logs/catxi-backend.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
